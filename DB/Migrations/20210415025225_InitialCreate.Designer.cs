// <auto-generated />
using System;
using CustomersRegistration.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210415025225_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Address", b =>
                {
                    b.Property<long>("idAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idAddress")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CustomeridCustomer")
                        .HasColumnType("bigint");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Identification");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StreetAddress");

                    b.HasKey("idAddress");

                    b.HasIndex("CustomeridCustomer");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.Property<long>("idCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idCustomer")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthdayDate");

                    b.Property<string>("CpfNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CpfNumber");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("RgNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RgNumber");

                    b.HasKey("idCustomer");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Domain.Models.Number", b =>
                {
                    b.Property<long>("idNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idNumber")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CustomeridCustomer")
                        .HasColumnType("bigint");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Identification");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("idNumber");

                    b.HasIndex("CustomeridCustomer");

                    b.ToTable("Number");
                });

            modelBuilder.Entity("Domain.Models.SocialMedia", b =>
                {
                    b.Property<long>("idSocialMedia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idSocialMedia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CustomeridCustomer")
                        .HasColumnType("bigint");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Identification");

                    b.Property<string>("SocialMediaLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SocialMediaLink");

                    b.HasKey("idSocialMedia");

                    b.HasIndex("CustomeridCustomer");

                    b.ToTable("SocialMedia");
                });

            modelBuilder.Entity("Domain.Models.Address", b =>
                {
                    b.HasOne("Domain.Models.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomeridCustomer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Models.Number", b =>
                {
                    b.HasOne("Domain.Models.Customer", "Customer")
                        .WithMany("Numbers")
                        .HasForeignKey("CustomeridCustomer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Models.SocialMedia", b =>
                {
                    b.HasOne("Domain.Models.Customer", "Customer")
                        .WithMany("SocialMedias")
                        .HasForeignKey("CustomeridCustomer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Numbers");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
